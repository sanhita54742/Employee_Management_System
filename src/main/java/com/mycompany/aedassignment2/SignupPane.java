/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.aedassignment2;

import java.awt.Component;
import java.awt.Container;
import java.awt.List;
import java.util.ArrayList;
import javax.swing.JComponent;
import model.MainHistory;
import model.MainModel;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JSplitPane;
/**
 
 */
public class SignupPane extends javax.swing.JPanel {
    MainHistory history;
    JSplitPane jSplitPane2;
    int cityArraySize;
    /**
     * Creates new form SignupPage
     */
    public SignupPane(MainHistory history,JSplitPane jSplitPane1,int cityArraySize) {
        initComponents();
        this.history = history;
        this.jSplitPane2 = jSplitPane1;
        this.cityArraySize = cityArraySize;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        inpUser = new javax.swing.JTextField();
        inpPass = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        inpCnfPass = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        inpName = new javax.swing.JTextField();

        setBackground(new java.awt.Color(102, 255, 255));

        jLabel1.setText("Create USER ID:");

        jLabel2.setText("Create PASSWORD:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("HOSPITAL MANAGEMENT SYSTEM");

        jButton1.setText("SIGN UP");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Confirm PASSWORD:");

        jLabel4.setText("Enter Full Name:");

        inpName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inpNameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inpUser)
                            .addComponent(inpPass)
                            .addComponent(inpCnfPass, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                            .addComponent(inpName)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inpName, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(inpUser)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inpPass, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(inpCnfPass)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(89, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String Name = inpName.getText();
        String UserId = inpUser.getText();
        String Pass = inpPass.getText();
        String CnfPass = inpCnfPass.getText();
        String City;
        String Role;
        int Flag = 0;
        ArrayList<MainModel> mainM = history.getHistory();
        ArrayList<MainModel> cityArray = new ArrayList();
        
//         = new ArrayList();
        if(Pass.equals(CnfPass)){
            for(int i = 0; i < mainM.size();i++){
                cityArray = mainM.get(i).getPersonArray();
                for (int j = 0;j<cityArray.size();j++ ){
                    if(cityArray.get(j).getPersonId() == UserId){
                        System.out.println("User Already Exists");
                        Flag = 1;
                        break;
                    }
                    
            }
        }
            if(Flag == 0){
                MainModel mainMo = history.addNewPerson();
                mainMo.setPersonName(Name);
                mainMo.setPersonRole("Patient");
                mainMo.setPersonId(UserId);
                mainMo.setPersonPassword(Pass);
                MainModel mainModel = history.addNewSession();
                mainModel.setSessionName(Name);
                mainModel.setSessionRole("Patient");
                mainModel.setSessionId(UserId);
                mainModel.setSessionPass(Pass);
                
                
                PatientOptionPane obj = new PatientOptionPane(history,jSplitPane2);
                jSplitPane2.setRightComponent(obj);
                LogoutPane obj1 = new LogoutPane(history,jSplitPane2,cityArraySize);
                jSplitPane2.setLeftComponent(obj1);
//                ArrayList<MainModel> mainMod = history.getHistory();
                
//                String json = new Gson().toJson(mainMod);
//                System.out.println(json);
//                Gson gson = new Gson();
//                MainModel mainModel = gson.fromJson(json,MainModel.class);
//                System.out.println(mainModel);
//                System.out.println();
//                System.out.println(ArrayListToHashMap(mainM));   
//        String key = "key1"; //whatever
//
//        JSONObject jo = new JSONObject("{key1:\"val1\"}");
//        //Read from file
//        ObjectMapper mapper = new ObjectMapper();
//        JSONObject root = null;
//                try {
//                    root = mapper.readValue(new File("E:\\JAVA\\aedass2dummy-main\\src\\main\\java\\com\\mycompany\\aedassignment2\\json_file.json"), JSONObject.class);
//                } catch (IOException ex) {
//                    Logger.getLogger(SignupPane.class.getName()).log(Level.SEVERE, null, ex);
//                }
//
//        String val_newer = jo.getString(key);
//        String val_older = root.getString(key);
//                System.out.println(val_older);
//        //Compare values
//        if(!val_newer.equals(val_older))
//        {
//            System.out.println(root.toString());
//          //Update value in object
//           root.put(key,val_newer);
//
//           //Write into the file
//            try (FileWriter file = new FileWriter("E:\\JAVA\\aedass2dummy-main\\src\\main\\java\\com\\mycompany\\aedassignment2\\json_file.json")) 
//            {
//                file.write(root.toString());
//                file.flush();
//                System.out.println("Successfully updated json object to file...!!"+root.toString());
//            } catch (IOException ex) {
//                Logger.getLogger(SignupPane.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }

                System.out.println("PersonAdded");
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void inpNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inpNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inpNameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField inpCnfPass;
    private javax.swing.JTextField inpName;
    private javax.swing.JTextField inpPass;
    private javax.swing.JTextField inpUser;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
public static ArrayList<Component> getAllComponents(final Container c) {
    Component[] comps = c.getComponents();
    ArrayList<Component> compList = new ArrayList<Component>();
    for (Component comp : comps) {
        compList.add(comp);
        if (comp instanceof Container)
            compList.addAll(getAllComponents((Container) comp));
    }
    return compList;
}

public static HashMap<String, Object> ArrayListToHashMap(ArrayList<MainModel> arrayList) {
    HashMap<String, Object> hashMap = new HashMap<>();
//        ArrayList<MainModel> mainM = history.getHistory();
               
        for(int i =0 ; i<arrayList.size();i++){
            hashMap.put("cityArray",arrayList.get(i).getCity());
        }
//        for (int i =0;i<mainM.get(j).getHospitalArray().get(k).getDoctorArray().size();i++){
//  
//            hashMap.put(str, str.getHospitalArray());
//        }
  
        return hashMap;
}
}
